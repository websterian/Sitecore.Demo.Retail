<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <orderServiceProvider singleInstance="true">
      <patch:attribute name="type">Sitecore.Commerce.Connect.DynamicsRetail.Services.Orders.CommerceOrderServiceProvider, Sitecore.Commerce.Connect.DynamicsRetail</patch:attribute>
    </orderServiceProvider>

    <pipelines>
	  <initialize>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceOrderProcessor, Sitecore.Commerce.Connect.CommerceServer">
          <patch:delete />
        </processor>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceCacheProcessor, Sitecore.Commerce.Connect.CommerceServer" method="Init">
          <patch:delete/>
        </processor>
      </initialize>

      <preprocessRequest>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceOrderProcessor, Sitecore.Commerce.Connect.CommerceServer">
          <patch:delete />
        </processor>
      </preprocessRequest>
	
	
      <translate.orderToEntity>
        <processor type="Sitecore.Commerce.Connect.DynamicsRetail.Pipelines.Orders.TranslateOrderToEntity, Sitecore.Commerce.Connect.DynamicsRetail">
          <param ref="entityFactory" />
        </processor>
      </translate.orderToEntity>

      <translate.orderToOrderHeaderEntity>
        <processor type="Sitecore.Commerce.Connect.DynamicsRetail.Pipelines.Orders.TranslateOrderToOrderHeaderEntity, Sitecore.Commerce.Connect.DynamicsRetail">
          <param ref="entityFactory" />
        </processor>
      </translate.orderToOrderHeaderEntity>

      <translate.orderItemToEntity>
        <processor type="Sitecore.Commerce.Connect.DynamicsRetail.Pipelines.Orders.TranslateOrderItemToEntity, Sitecore.Commerce.Connect.DynamicsRetail">
          <param ref="entityFactory" />
        </processor>
      </translate.orderItemToEntity>

      <commerce.orders.getAvailableCountries>
        <processor type="Sitecore.Commerce.Connect.DynamicsRetail.Pipelines.Orders.GetAvailableCountries, Sitecore.Commerce.Connect.DynamicsRetail"/>
      </commerce.orders.getAvailableCountries>

      <commerce.orders.getAvailableRegions>
        <processor type="Sitecore.Commerce.Connect.DynamicsRetail.Pipelines.Orders.GetAvailableRegions, Sitecore.Commerce.Connect.DynamicsRetail"/>
      </commerce.orders.getAvailableRegions>

      <commerce.orders.submitVisitorOrder>
        <processor type="Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan, Sitecore.Commerce">
          <patch:delete />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Orders.Common.TriggerOrderGoal, Sitecore.Commerce">
          <patch:delete />
        </processor>       
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.ResolveBasket, Sitecore.Commerce.Connect.CommerceServer">
          <patch:delete />
        </processor>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline, Sitecore.Commerce.Connect.CommerceServer" name="BasketPipeline">
          <patch:delete />
        </processor>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunTotalPipeline, Sitecore.Commerce.Connect.CommerceServer">
          <patch:delete />
        </processor>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline, Sitecore.Commerce.Connect.CommerceServer" name="CheckoutPipeline">
          <patch:delete />
        </processor>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.SubmitVisitorOrder, Sitecore.Commerce.Connect.CommerceServer">
          <patch:delete />
        </processor>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddOrderToEaPlan, Sitecore.Commerce.Connect.CommerceServer">
          <patch:delete />
        </processor>
        <processor patch:before="processor[@type='Sitecore.Commerce.Pipelines.Orders.TriggerLoyaltyCardPurchasePageEvent, Sitecore.Commerce']" type="Sitecore.Commerce.Connect.DynamicsRetail.Pipelines.Orders.SubmitVisitorOrder, Sitecore.Commerce.Connect.DynamicsRetail"/>
        <processor type="Sitecore.Commerce.Pipelines.Orders.Common.AddOrderToEAPlan, Sitecore.Commerce">
          <param ref="eaPlanProvider"/>
          <param ref="entityFactory" />
          <EngagementPlanName>New Order Placed</EngagementPlanName>
          <InitialStateName>Initial State</InitialStateName>
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Orders.Common.TriggerOrderGoal, Sitecore.Commerce">
          <Name>Visitor Order Created</Name>
          <Text>Visitor order has been created.</Text>
        </processor>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceTriggerProductStockStatusPageEvent, Sitecore.Commerce.Connect.CommerceServer">
          <patch:delete />
        </processor>
      </commerce.orders.submitVisitorOrder>

      <commerce.orders.getVisitorOrder>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetVisitorOrderDetail, Sitecore.Commerce.Connect.CommerceServer">
          <patch:delete/>
        </processor>
        <processor patch:before="processor[@type='Sitecore.Commerce.Pipelines.Orders.GetVisitorOrder.TriggerVisitorViewedOrderDetailsPageEvent, Sitecore.Commerce']" type="Sitecore.Commerce.Connect.DynamicsRetail.Pipelines.Orders.GetVisitorOrderDetail, Sitecore.Commerce.Connect.DynamicsRetail">
          <param ref="entityFactory" />
        </processor>
      </commerce.orders.getVisitorOrder>

      <commerce.orders.getVisitorOrders>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetVisitorOrders, Sitecore.Commerce.Connect.CommerceServer">
          <patch:delete/>
        </processor>
        <processor patch:before="processor[@type='Sitecore.Commerce.Pipelines.Orders.GetVisitorOrders.TriggerVisitorViewedOrderHistoryPageEvent, Sitecore.Commerce']" type="Sitecore.Commerce.Connect.DynamicsRetail.Pipelines.Orders.GetVisitorOrders, Sitecore.Commerce.Connect.DynamicsRetail">
          <param ref="entityFactory" />
        </processor>
      </commerce.orders.getVisitorOrders>
    </pipelines>
  </sitecore>
</configuration>